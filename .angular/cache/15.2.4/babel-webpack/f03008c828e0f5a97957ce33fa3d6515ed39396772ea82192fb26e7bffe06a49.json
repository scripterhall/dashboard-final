{"ast":null,"code":"import { WebSocketSubject } from \"rxjs/webSocket\";\nimport { WebSocketTicketTacheService } from \"./service/web-socket-ticket-tache.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/web-socket-ticket-tache.service\";\nimport * as i2 from \"@angular/router\";\nvar AppComponent = /** @class */function () {\n  function AppComponent(webSocketService) {\n    this.webSocketService = webSocketService;\n    this.title = \"gestion projet scrum\";\n    this.messages = [];\n    this.numberOfMessages = 0;\n  }\n  AppComponent.prototype.ngOnInit = function () {\n    this.webSocketService.connect().multiplex(function () {\n      return {\n        subscribe: 'message'\n      };\n    }, function () {\n      return {\n        unsubscribe: 'message'\n      };\n    }, function (message) {\n      return message.type === 'message';\n    }).subscribe(function (message) {\n      console.log(message.payload); // afficher le message reçu dans la console\n    }, function (err) {\n      console.error(err); // afficher les erreurs dans la console\n    }, function () {\n      console.log('WebSocket connection closed'); // afficher un message lorsque la connexion est fermée\n    });\n  };\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.WebSocketTicketTacheService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 1,\n    vars: 0,\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"router-outlet\");\n      }\n    },\n    dependencies: [i2.RouterOutlet]\n  });\n  return AppComponent;\n}();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}